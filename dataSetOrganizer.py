'''
This file splits the dataset into a randomized 80-20 split

Author: Matthew Schofield
Version 5.1.2020
'''
import pandas as pd
from sklearn.utils import shuffle
import pickle as pkl

class malwareTokenWrapper:
    '''
    Wraps the malware data for model interpretation
    '''
    def __init__(self, malwareDataPath="./data/malwaremodified.csv"):
        self.data = pd.read_csv(malwareDataPath)

    def getData(self):
        return self.data

    def toSequences(self, percent=1.0, first=True, limit=2000, strictLimit=True):
        '''
        Get n% of data
        :param percent: % to grab
        :param first: whether to pull from start or end
        :param limit: take first n calls
        :param strictLimit: True: only take calls under limit, False: take the first n=(limit) of each api call
        :return: lists of data and labels
        '''
        if strictLimit:
            self.data = self.data[self.data["lengthOfCalls"] <= limit]

        dataLen = int(len(self.data) * percent)

        calls = self.data["calls"].values

        outCalls = []
        for call in calls:
            outCalls.append(call.split(",")[:limit])

        labels = self.data["label"].values
        calls, labels = shuffle(outCalls, labels)

        # Get n% of the data from either the start or end
        if first:
            calls = calls[:dataLen]
            labels = labels[:dataLen]
        else:
            calls = calls[-dataLen:]
            labels = labels[-dataLen:]

        return calls, labels

tknWrapper = malwareTokenWrapper()

'''
shortenedCalls80, shortenedLabels80 = tknWrapper.toSequences(percent=.8)
shortenedCalls_20, shortenedLabels_20 = tknWrapper.toSequences(first=False, percent=.2)

pkl.dump(shortenedCalls80, open("ShortCalls80_2000.pkl", 'wb+'))
pkl.dump(shortenedLabels80, open("ShortLabels80_2000.pkl", 'wb+'))

pkl.dump(shortenedCalls_20, open("ShortCalls_20_2000.pkl", 'wb+'))
pkl.dump(shortenedLabels_20, open("ShortLabels_20_2000.pkl", 'wb+'))
'''
allCalls80, allLabels80 = tknWrapper.toSequences(percent=.8, strictLimit=False)
allCalls_20, allLabels_20 = tknWrapper.toSequences(first=False, percent=.2, strictLimit=False)

pkl.dump(allCalls80, open("AllCalls80_2000.pkl", 'wb+'))
pkl.dump(allLabels80, open("AllLabels80_2000.pkl", 'wb+'))

pkl.dump(allCalls_20, open("AllCalls_20_2000.pkl", 'wb+'))
pkl.dump(allLabels_20, open("AllLabels_20_2000.pkl", 'wb+'))


